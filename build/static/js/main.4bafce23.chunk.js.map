{"version":3,"sources":["Layout/Header.js","Layout/NotFound.js","Layout/Deck/CreateDeckButton.jsx","utils/api/index.js","Layout/Deck/Deck.jsx","Layout/Deck/DeckList.jsx","Layout/Deck/DeckView.jsx","Layout/BreadCrumb.jsx","Layout/Card/CardView.jsx","Layout/Card/CardList.jsx","Layout/Card/NextButton.jsx","Layout/Card/StudyCard.jsx","Layout/Deck/StudyDeck.jsx","Layout/Forms/EditDeckForm.jsx","Layout/Deck/EditDeck.jsx","Layout/Forms/CardForm.jsx","Layout/Card/CreateCard.jsx","Layout/Card/EditCard.jsx","Layout/Deck/ViewDeck.jsx","Layout/Forms/CreateDeckForm.jsx","Layout/Deck/CreateDeck.jsx","Layout/index.js","App.js","index.js"],"names":["Header","className","NotFound","CreateDeckButton","to","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","a","fetch","response","status","Error","statusText","json","name","listDecks","signal","method","body","JSON","stringify","readDeck","deckId","updatedDeck","id","deleteDeck","createCard","card","Number","cardId","updateCard","updatedCard","Deck","decks","setDecks","length","history","useHistory","undefined","cardCount","onClick","event","abortController","AbortController","preventDefault","window","confirm","then","tempDecks","filter","theDeck","push","catch","console","log","abort","DeckList","useState","error","setError","useEffect","deckList","map","append","DeckView","description","BreadCrumb","setDeck","useRouteMatch","params","subUrls","split","param","list","aSubUrl","index","value","aria-label","CardView","front","back","deleteCard","filteredCards","selected","e","CardList","setCards","tempCards","sort","card1","card2","NextButton","flip","setFlip","cardNum","setCardNum","setIsVisible","StudyCard","isVisible","content","StudyDeck","cardAmount","EditDeckForm","deckUrl","setName","setDescription","tempDeck","setTempDeck","onSubmit","updateDeck","htmlFor","type","onChange","target","EditDeck","CardForm","formData","setFormData","edit","setEdit","decksTemp","deckTemp","handleChange","readCard","theArguments","handleFunction","placeholder","CreateCard","EditCard","ViewDeck","path","CreateDeckForm","newDeck","setNewDeck","newDecks","createDeck","CreateDeck","Layout","exact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bafce23.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport {\n    Link,\n    // NavLink,\n    // Route,\n    // Switch,\n    // useParams,\n    // useRouteMatch,\n  } from \"react-router-dom\";\n\nexport default function CreateDeckButton () \n{\n    return (\n        <Link to=\"/decks/new\" className=\"btn btn-secondary oi oi-plus\" >\n             Create Deck\n        </Link>\n    )\n}","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options) {\n  try {\n    const response = await fetch(url, options);\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n    return await response.json();\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all cards associated with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to a possible empty array of cards.\n */\nexport async function listCards(deckId, signal) {\n  const url = `${API_BASE_URL}/cards?deckId=${deckId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal });\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\n//import CreateDeckButton from \"./CreateDeckButton\";\n//import Header from \"../Header\";\n//import NotFound from \"../NotFound\";\nimport { deleteDeck } from \"../../utils/api/index\";\nimport { Link, useHistory } from \"react-router-dom\";\n//import { listDecks} from \"../../utils/api/index\"\n\nexport default function Deck({ deck, decks, setDecks }) {\n  let length = 0;\n  const history = useHistory();\n  if (deck.cards !== undefined) {\n    length = deck.cards.length;\n  }\n  const cardCount = length;\n  function onClick(event) {\n    const abortController = new AbortController();\n    event.preventDefault();\n    if (window.confirm(\"You sure you want to delete Deck?\")) {\n      deleteDeck(deck.id, abortController.signal)\n        .then((response) => {\n          const tempDecks = decks.filter((theDeck) => theDeck.id !== deck.id);\n          setDecks(() => tempDecks);\n          history.push(`/`);\n        })\n        .catch(console.log(\"Bad magnitude 10\"));\n    }\n\n    return () => abortController.abort();\n  }\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-body\">\n        <div className=\"d-flex  justify-content-between \">\n          <h5 className=\"card-title\">{deck.name}</h5>\n          <small> {cardCount} cards</small>\n        </div>\n        {/* <div class=\"card-text\"> \n    </div> */}\n        <Link\n          to={`/decks/${deck.id}`}\n          className=\"btn btn-secondary mr-1 oi oi-eye\"\n        >\n          View\n        </Link>\n        <Link\n          to={`/decks/${deck.id}/study`}\n          className=\"btn btn-primary ml-1 oi oi-book\"\n        >\n          Study\n        </Link>\n        <button\n          className=\"btn btn-danger float-right oi oi-trash\"\n          onClick={onClick}\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport CreateDeckButton from \"./CreateDeckButton\";\n//import Header from \"../Header\";\n//import NotFound from \"../NotFound\";\n\nimport Deck from \"./Deck\";\nimport { listDecks } from \"../../utils/api/index\";\n\nexport default function DeckList({ decks, setDecks }) {\n  const [error, setError] = useState(undefined);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    listDecks(abortController.signal).then(setDecks).catch(setError);\n\n    return () => abortController.abort();\n  }, [setDecks]);\n\n  if (error) {\n    //  return <ErrorMessage error={error} />;\n    console.log(\"very big bad\");\n  }\n  const deckList = decks.map((deck) => (\n    <Deck key={deck.id} deck={deck} decks={decks} setDecks={setDecks} />\n  ));\n\n  return (\n    <div>\n      <CreateDeckButton />\n      {deckList}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { deleteDeck } from \"../../utils/api/index\";\n\nexport default function DeckView({ deck, url, decks, setDecks }) {\n  const history = useHistory();\n  function onClick(event) {\n    const abortController = new AbortController();\n    event.preventDefault();\n    if (window.confirm(\"You sure you want to delete Deck?\")) {\n      deleteDeck(deck.id, abortController.signal)\n        .then((response) => {\n          const tempDecks = decks.filter((theDeck) => theDeck.id !== deck.id);\n          setDecks(() => tempDecks);\n          history.push(`/`);\n        })\n        .catch(console.log(\"Bad magnitude 10\"));\n    }\n\n    return () => abortController.abort();\n  }\n  return (\n    <div className=\"card  border-0\">\n      <div className=\"card-body px-0\">\n        <div className=\"d-flex  justify-content-between \">\n          <h5 className=\"card-title\">{deck.name}</h5>\n        </div>\n        {/* <div class=\"card-text\"> \n    </div> */}\n        <p>{deck.description}</p>\n        <Link\n          to={`${url}/edit`}\n          className=\"btn btn-secondary mr-1 oi oi-pencil\"\n        >\n          Edit\n        </Link>\n        <Link to={`${url}/study`} className=\"btn btn-primary ml-1 oi oi-book\">\n          Study\n        </Link>\n        <Link\n          to={`${url}/cards/new`}\n          className=\"btn btn-primary ml-2 oi oi-plus\"\n        >\n          Add Cards\n        </Link>\n        <button\n          className=\"btn btn-danger float-right oi oi-trash\"\n          onClick={onClick}\n        ></button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api\";\n//import { listDecks} from \"./utils/api/index\"\n\nexport default function BreadCrumb({ decks }) {\n  const [deck, setDeck] = useState({});\n  const { url, params } = useRouteMatch();\n  const [error, setError] = useState(undefined);\n  const subUrls = url.split(`/`);\n  //console.log(useRouteMatch());\n  // console.log(path);\n  let deckId;\n  for (let param in params) {\n    if (param === \"deckId\") {\n      deckId = params[param];\n    }\n  }\n\n  if (error) {\n    console.log(error);\n  }\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal).then(setDeck).catch(setError);\n    return () => abortController.abort();\n  }, [decks, deckId]);\n  const list = subUrls.map((aSubUrl, index) => {\n    //console.log(aSubUrl);\n    if (deck !== undefined) {\n      let className;\n      if (index >= subUrls.length - 1) {\n        className = \"breadcrumb-item active\";\n        if (aSubUrl === deckId && deckId !== \"new\") {\n          return (\n            <li className={className} key={index}>\n              {deck.name}\n            </li>\n          );\n        }\n        let value = \"  \";\n        switch (aSubUrl) {\n          case \"new\":\n            if (subUrls[index - 1] === \"cards\") {\n              value = \"Add Card\";\n            } else {\n              value = \"Create Deck\";\n            }\n\n            break;\n          case \"study\":\n            value = \"Study\";\n            break;\n          case \"edit\":\n            if (subUrls[index - 2] === \"cards\") {\n              value = `Edit Card ${subUrls[index - 1]}`;\n            } else {\n              value = \"Edit Deck\";\n            }\n            break;\n          default:\n            value = \"Error\";\n        }\n        return (\n          <li className={className} key={index}>\n            {value}\n          </li>\n        );\n      } else {\n        className = \"breadcrumb-item\";\n      }\n      if (aSubUrl !== \"decks\" && aSubUrl !== \"\") {\n        if (aSubUrl === deckId) {\n          return (\n            <li className={className} key={index}>\n              <Link to={`/decks/${aSubUrl}`}>{deck.name}</Link>\n            </li>\n          );\n        }\n      } else {\n        if (aSubUrl === \"\") {\n          return (\n            <li className={className} key={index}>\n              <Link to={`${aSubUrl}`} className=\"oi oi-home\">\n                Home\n              </Link>\n            </li>\n          );\n        }\n      }\n    } else {\n      return null;\n    }\n    return null;\n  });\n  return (\n    <nav aria-label=\"breadcrumb\">\n      <ol className=\"breadcrumb\">{list}</ol>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { deleteCard } from \"../../utils/api\";\nexport default function CardView({ card: { id, front, back }, deck, setDeck }) {\n  const url = useRouteMatch().url;\n  function handleDelete(event) {\n    const abortController = new AbortController();\n    if (window.confirm(\"Delete this card?\")) {\n      deleteCard(id, abortController.signal)\n        .then(() => {\n          const filteredCards = deck.cards.filter(\n            (selected) => selected.id !== id\n          );\n          setDeck(() => {\n            return { ...deck, cards: filteredCards };\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  }\n  return (\n    <div className=\"card container\">\n      <div className=\"d-flex row \">\n        <div className=\"col-6\">\n          <p>{front}</p>\n        </div>\n        <div className=\"col-6\">\n          <p>{back}</p>\n        </div>\n      </div>\n      <div className=\" float-right text-right\">\n        <Link\n          to={`${url}/cards/${id}/edit`}\n          className=\"btn btn-secondary ml-1 oi oi-pencil\"\n        >\n          Edit\n        </Link>\n        <button\n          className=\"btn btn-danger float-right oi oi-trash ml-3\"\n          onClick={handleDelete}\n        ></button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\n\nimport CardView from \"./CardView\";\n\nexport default function CardList({\n  deck,\n  deckId,\n  setDeck,\n  decks,\n  setDecks,\n  cards,\n  setCards,\n}) {\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (deck.cards !== undefined) {\n      const tempCards = deck.cards;\n      tempCards.sort((card1, card2) => card1.id - card2.id);\n      setCards(tempCards);\n    }\n\n    return () => abortController.abort();\n  }, [deck, setCards]);\n  // console.log(deck.cards);\n  console.log(cards);\n  const list = cards.map((card, index) => (\n    <CardView\n      card={card}\n      key={index}\n      cards={cards}\n      setCards={setCards}\n      deck={deck}\n      setDeck={setDeck}\n      decks={decks}\n      setDecks={setDecks}\n    />\n  ));\n\n  return (\n    <div>\n      <h2>Cards</h2>\n      {list}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function NextButton({\n  flip,\n  setFlip,\n  length,\n  cardNum,\n  setCardNum,\n  setIsVisible,\n}) {\n  const history = useHistory();\n\n  function onClick() {\n    if (cardNum < length - 1) {\n      setCardNum(cardNum + 1);\n      setFlip(false);\n      setIsVisible(false);\n    } else {\n      if (window.confirm(\"Restart cards?\")) {\n        setCardNum(0);\n        setIsVisible(false);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  return (\n    <button\n      className=\"btn btn-primary ml-1 oi oi-arrow-thick-right\"\n      onClick={() => onClick()}\n    >\n      Next\n    </button>\n  );\n}\n","import React, { useState } from \"react\";\nimport NextButton from \"./NextButton\";\n\nexport default function StudyCard({ cards }) {\n  const [cardNum, setCardNum] = useState(0);\n  const [flip, setFlip] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  let content = \"\";\n  // if (deck.cards != undefined) {\n  //   console.log(deck.cards[cardNum]);\n  // } else {\n  //   console.log(\"render in progress\");\n  // }\n  //   const [content, setContent] = useState(\"\");\n\n  if (flip) {\n    if (cards.length !== 0) {\n      content = cards[cardNum].back;\n    }\n  } else {\n    if (cards.length !== 0) {\n      content = cards[cardNum].front;\n    }\n    // setContent(\"test\");\n    // return null;\n  }\n  if (cards.length !== 0) {\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-body\">\n          <div className=\"d-flex  justify-content-between \">\n            <h5 className=\"card-title\">{`Card ${cardNum + 1} of ${\n              cards.length\n            } `}</h5>\n          </div>\n          <p>{content}</p>\n          <button\n            className=\"btn btn-secondary ml-1 oi oi-arrow-thick-top\"\n            onClick={() => {\n              setFlip(!flip);\n              setIsVisible(!isVisible);\n            }}\n          >\n            Flip\n          </button>\n          {isVisible ? (\n            <NextButton\n              flip={flip}\n              setFlip={setFlip}\n              length={cards.length}\n              cardNum={cardNum}\n              setCardNum={setCardNum}\n              setIsVisible={setIsVisible}\n            />\n          ) : null}\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n","import React from \"react\";\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport StudyCard from \"../Card/StudyCard\";\n\nexport default function StudyDeck({ decks, deck, cards }) {\n  let cardAmount = cards.length;\n  //  let tempCards = [...cards];\n  // if (deck.cards != undefined) {\n  //   tempCards = deck.cards;\n  // }\n\n  // const [cards, setCards] = useState([...tempCards]);\n  // const deckId = deck.id;\n  // if (deck.cards != undefined) {\n  //   cardAmount = deck.cards.length;\n  // } else {\n  //   cardAmount = 0;\n  // }\n  // useEffect(() => {\n  //   const abortController = new AbortController();\n  //   // listCards(deckId, abortController.signal)\n  //   //   .then(setCards)\n  //   //   .then(() => {\n  //   //     cardAmount = cards.length;\n  //   //   })\n  //   //   .catch(console.log(\"bad magnitude 10\"));\n  //   cardAmount = cards.length;\n  //   return () => abortController.abort();\n  // }, [cards]);\n  return (\n    <div>\n      <BreadCrumb decks={decks} />\n      <h2> {deck.name}: Study</h2>\n\n      {cardAmount > 2 ? (\n        <StudyCard cards={cards} />\n      ) : (\n        <div>\n          <h3>Not Enough Cards.</h3>\n          <p>\n            You need at least 3 cards to study. There are {cardAmount} cards in\n            this deck\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { updateDeck, listDecks } from \"../../utils/api\";\n\nexport default function EditDeckForm({\n  decks,\n  deck,\n  setDeck,\n  deckUrl,\n  setDecks,\n}) {\n  const [name, setName] = useState(deck.name);\n  const { params } = useRouteMatch();\n  const handleNameChange = (event) => setName(event.target.value);\n  const [description, setDescription] = useState(deck.description);\n  const history = useHistory();\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\n  const abortController = new AbortController();\n\n  const [tempDeck, setTempDeck] = useState({\n    name: name,\n    description: description,\n    id: params.deckId,\n  });\n  //   const { url, params} = useRouteMatch();\n  useEffect(() => {\n    setDescription(() => deck.description);\n    setName(() => deck.name);\n  }, [deck]);\n  useEffect(() => {\n    setTempDeck({ name: name, description: description, id: params.deckId });\n  }, [name, description]);\n  function submitHandler(event) {\n    event.preventDefault();\n    console.log(tempDeck);\n    updateDeck(tempDeck, abortController.signal)\n      .then(setDeck({ ...deck, ...tempDeck }))\n      .then(listDecks(abortController.signal).then(setDecks))\n      .then(history.push(deckUrl))\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n  return (\n    <form name=\"editDeck\" onSubmit={submitHandler}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleNameChange}\n          value={name}\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Description </label>\n        <textarea\n          id=\"description\"\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          className=\"form-control\"\n          onChange={handleDescriptionChange}\n        ></textarea>\n      </div>\n      <Link className=\"btn btn-secondary mr-1\" to={`${deckUrl}`}>\n        Cancel\n      </Link>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n      {/* <label htmlFor=\"description\">\n        Description\n        <input id=\"description\" type=\"textBox\" name=\"description\" />\n      </label> */}\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport EditDeckForm from \"../Forms/EditDeckForm\";\n\nexport default function EditDeck({ decks, deck, setDeck, deckUrl, setDecks }) {\n  return (\n    <div>\n      <BreadCrumb decks={decks} />\n      <h2>Edit Deck</h2>\n      <EditDeckForm\n        deck={deck}\n        setDeck={setDeck}\n        deckUrl={deckUrl}\n        decks={decks}\n        setDecks={setDecks}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport { updateCard, createCard, readCard } from \"../../utils/api\";\n\nexport default function CardForm({\n  decks,\n  setDecks,\n  deck,\n  setDeck,\n  deckUrl,\n  cards,\n  setCards,\n}) {\n  const [formData, setFormData] = useState({ front: \"\", back: \"\" });\n  const history = useHistory();\n  const { url } = useRouteMatch();\n  const subUrls = url.split(`/`);\n  const [edit, setEdit] = useState(false);\n  let decksTemp = decks;\n  const deckTemp = deck;\n  // if edit then setFormdata to current card using card id from url\n  useEffect(() => {\n    if (subUrls[subUrls.length - 1] === \"edit\") {\n      setEdit(true);\n      readCard(subUrls[subUrls.length - 2])\n        .then(setFormData)\n        .catch(console.log(\"Bad magnitude 10\"));\n    }\n  }, []);\n\n  function handleChange({ target }) {\n    setFormData(() => ({\n      ...formData,\n      [target.name]: target.value,\n    }));\n  }\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    let theArguments = [deck.id, formData, abortController.signal];\n    let handleFunction = createCard;\n    if (edit) {\n      theArguments = [formData, abortController.signal];\n      handleFunction = updateCard;\n    }\n    handleFunction(...theArguments) // change to update card for edit\n      // .then((response) => {\n      //   // setFormData({ ...response });\n      //   return { ...response };\n      // }) //setFormData\n      .then((response) => {\n        deckTemp.cards = deckTemp.cards.filter(\n          (card) => card.id !== response.id\n        );\n        // console.log(`Before ::::: ${deckTemp.cards}`);\n        deckTemp.cards.push(response);\n        setDeck({ ...deckTemp });\n        // console.log(`After ::::: ${deckTemp.cards}`);\n      })\n      .then(() => {\n        decksTemp = decksTemp.filter((theDeck) => theDeck.id !== deck.id);\n        decksTemp.push(deckTemp);\n        setDecks([...decksTemp]);\n        if (!edit) {\n          setFormData({ front: \"\", back: \"\" });\n        } else {\n          history.push(deckUrl);\n        }\n        // if edit got to view screen\n      })\n      .catch(console.log(\"Bad magnitude 10\"));\n    return () => abortController.abort();\n  }\n  return (\n    <form name=\"createDeck\" onSubmit={submitHandler}>\n      <div className=\"front\">\n        <label htmlFor=\"front\">Front</label>\n        <textarea\n          id=\"front\"\n          type=\"text\"\n          name=\"front\"\n          value={formData.front}\n          placeholder=\"Front side of card\"\n          className=\"form-control\"\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"back\">Back</label>\n        <textarea\n          id=\"back\"\n          type=\"text\"\n          name=\"back\"\n          value={formData.back}\n          placeholder=\"Back Side of card\"\n          className=\"form-control\"\n          onChange={handleChange}\n        ></textarea>\n      </div>\n      <Link className=\"btn btn-secondary mr-1\" to={deckUrl}>\n        Done\n      </Link>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport CardForm from \"../Forms/CardForm\";\n\nexport default function CreateCard({\n  decks,\n  deck,\n  setDeck,\n  deckUrl,\n  setDecks,\n  cards,\n  setCards,\n}) {\n  return (\n    <div>\n      <BreadCrumb decks={decks} />\n      <h2>{deck.name}: Add Card</h2>\n      <CardForm\n        deck={deck}\n        setDeck={setDeck}\n        deckUrl={deckUrl}\n        decks={decks}\n        setDecks={setDecks}\n        cards={cards}\n        setCards={setCards}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport BreadCrumb from \"../BreadCrumb\";\nimport CardForm from \"../Forms/CardForm\";\n\nexport default function EditCard({\n  decks,\n  deck,\n  setDeck,\n  deckUrl,\n  setDecks,\n  cards,\n  setCards,\n}) {\n  return (\n    <div>\n      <BreadCrumb decks={decks} />\n      <h2>Edit Card</h2>\n      <CardForm\n        deck={deck}\n        setDeck={setDeck}\n        deckUrl={deckUrl}\n        decks={decks}\n        setDecks={setDecks}\n        cards={cards}\n        setCards={setCards}\n      />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n// import CreateDeckButton from \"./CreateDeckButton\";\nimport DeckView from \"./DeckView\";\n//import Header from \"../Header\";\n//import NotFound from \"../NotFound\";\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\n// import Deck from \"./Deck\";\n// import { listDecks} from \"../../utils/api/index\"\nimport BreadCrumb from \"../BreadCrumb\";\nimport { readDeck } from \"../../utils/api\";\nimport CardList from \"../Card/CardList\";\nimport StudyDeck from \"./StudyDeck\";\nimport EditDeck from \"./EditDeck\";\nimport CreateCard from \"../Card/CreateCard\";\nimport EditCard from \"../Card/EditCard\";\n\nexport default function ViewDeck({ decks, setDecks }) {\n  const [deck, setDeck] = useState({});\n  const { path, url, params } = useRouteMatch();\n\n  const [cards, setCards] = useState([]);\n\n  let deckId;\n  for (let param in params) {\n    if (param === \"deckId\") {\n      deckId = params[param];\n    }\n  }\n  useEffect(() => {\n    const abortController = new AbortController();\n    readDeck(deckId, abortController.signal)\n      .then(setDeck)\n      .then(() => {\n        if (deck.cards !== undefined) setCards([...deck.cards]);\n      })\n      .catch(console.log(\"bad\"));\n\n    return () => abortController.abort();\n  }, []);\n  useEffect(() => {\n    if (deck.cards !== undefined) setCards([...deck.cards]);\n  }, [deck]);\n\n  return (\n    <div>\n      <Switch>\n        <Route path={`${path}/cards/:cardId/edit`}>\n          <EditCard\n            decks={decks}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            setDecks={setDecks}\n          />\n        </Route>\n        <Route path={`${path}/cards/new`}>\n          <CreateCard\n            decks={decks}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            setDecks={setDecks}\n            cards={cards}\n            setCards={setCards}\n          />\n        </Route>\n        <Route path={`${path}/edit`}>\n          <EditDeck\n            decks={decks}\n            deck={deck}\n            setDeck={setDeck}\n            deckUrl={url}\n            setDecks={setDecks}\n            cards={cards}\n            setCards={setCards}\n          />\n        </Route>\n        <Route path={`${path}/study`}>\n          <StudyDeck decks={decks} deck={deck} cards={cards} />\n        </Route>\n        <Route path={`${path}`}>\n          <BreadCrumb decks={decks} />\n          <DeckView deck={deck} url={url} decks={decks} setDecks={setDecks} />\n          <CardList\n            deck={deck}\n            deckId={deckId}\n            setDeck={setDeck}\n            decks={decks}\n            setDecks={setDecks}\n            cards={cards}\n            setCards={setCards}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api\";\n\nexport default function CreateDeckForm({ decks, setDecks }) {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [newDeck, setNewDeck] = useState({\n    name: name,\n    description: description,\n  });\n  const newDecks = decks;\n\n  const handleDescriptionChange = (event) => setDescription(event.target.value);\n  const handleNameChange = (event) => setName(event.target.value);\n  const history = useHistory();\n  useEffect(() => {\n    setNewDeck({ name: name, description: description });\n  }, [name, description]);\n  function submitHandler(event) {\n    event.preventDefault();\n    const abortController = new AbortController();\n    createDeck(newDeck, abortController.signal)\n      .then((response) => {\n        newDecks.push(response);\n        setDecks(() => newDecks);\n        history.push(`/decks/${response.id}`);\n      })\n      .catch(console.log(\"Bad magnitude 10\"));\n    return () => abortController.abort();\n  }\n  return (\n    <form name=\"createDeck\" onSubmit={submitHandler}>\n      <div className=\"form-group\">\n        <label htmlFor=\"name\">Name</label>\n        <input\n          id=\"name\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleNameChange}\n          value={name}\n          placeholder=\"Deck Name\"\n          className=\"form-control\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"description\">Description </label>\n        <textarea\n          id=\"description\"\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          placeholder=\"Brief description of the deck\"\n          className=\"form-control\"\n          onChange={handleDescriptionChange}\n        ></textarea>\n      </div>\n      <Link className=\"btn btn-secondary mr-1\" to={`/`}>\n        Cancel\n      </Link>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}\n","import React from \"react\";\n\nimport BreadCrumb from \"../BreadCrumb\";\n\nimport CreateDeckForm from \"../Forms/CreateDeckForm\";\n\nexport default function CreateDeck({ decks, setDecks }) {\n  return (\n    <div>\n      <BreadCrumb decks={decks} />\n      <h2>Create Deck</h2>\n      <CreateDeckForm decks={decks} setDecks={setDecks} />\n      {/* <EditDeckForm\n        deck={deck}\n        setDeck={setDeck}\n        deckUrl={deckUrl}\n        decks={decks}\n        setDecks={setDecks}\n      /> */}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport NotFound from \"./NotFound\";\nimport DeckList from \"./Deck/DeckList\";\nimport ViewDeck from \"./Deck/ViewDeck\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CreateDeck from \"./Deck/CreateDeck\";\nfunction Layout() {\n  const [decks, setDecks] = useState([]);\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        {/* TODO: Implement the screen starting here */}\n        <Switch>\n          <Route path=\"/decks/new\">\n            <CreateDeck decks={decks} setDecks={setDecks} />\n          </Route>\n          <Route path=\"/decks/:deckId\">\n            <ViewDeck decks={decks} setDecks={setDecks} />\n          </Route>\n          <Route path=\"/\" exact={true}>\n            <DeckList decks={decks} setDecks={setDecks} />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}